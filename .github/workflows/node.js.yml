# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - run: yarn build
      - name: Upload production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Static Build folder
          path: |
            ./dist
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Running Tests
        run: yarn test
      - run: yarn build
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: |
            ./coverage
      - name: Monitor coverage
        if: github.event_name == 'pull_request'
        uses: slavcodev/coverage-monitor-action@1.2.0
        with:
          github_token: ${{ secrets.GT_TOKEN }}
          clover_file: "./coverage/clover.xml"
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Running eslint
        run: yarn lint:check
      - name: Running prettier
        run: yarn prettier:check
      - name: Running stylelint
        run: yarn stylelint:check
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Running audit check
        run: yarn audit --groups dependencies
